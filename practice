#include <iostream>
using namespace std;

int main()
{ int DAY, MONTH, YEAR;
   
   char c;
   textcolor(GREEN);
   void graph(void);
   void enter_password();

   enter_password();
   clrscr();
   struct date d;
   getdate(&d);
		DAY=	d.da_day;
		MONTH=	d.da_mon;
		YEAR=	d.da_year;
do
	{
			clrscr();
			graph();
			gotoxy(32,3); cout<<"H I L L   V I E W";
			gotoxy(5,23); cout<<"Designed and Created by";
			gotoxy(30,24); cout <<"ARUN VENKATESH";
			gotoxy(30,25); cout <<"ANANDA VALLIAPPAN";
			gotoxy(30,26); cout <<"ATEETH KUMAR";
			gotoxy (5,12);cout<<"1. Search";
			gotoxy (5,13);cout<<"2. Check in";
			gotoxy (5,14);cout<<"3. Check out";
			gotoxy (5,15);cout<<"4. Room status";
			gotoxy (5,16);cout<<"5. Earnings";
			gotoxy (5,17);cout<<"6. Previous Customers";
			gotoxy (5,18);cout<<"0. Exit";
			gotoxy(30,21);	cout<<"Enter choice : ";
			do{c=getch();
			  if(c>=48 &&c<=54) {cout<<c;delay(500);}
			  }while(c<48 || c>54);
			switch(c)
				{ case '0':choice =0;break;
				case '1' : choice =1;break;
				case '2':choice=2;break;
				case '3':choice =3;break;
				case '4':choice=4;break;
				case '5':choice=5;break;
				case '6':choice=6;break;
				}
			closegraph();
			restorecrtmode();
switch(choice)
			{
		case 1:	{
			 int choice;
			 char ch;
			 do
			{
			clrscr();
			graph();
			gotoxy(32,3);cout<<"H I L L   V I E W";
			gotoxy(32, 5);cout<<"S E A R C H\n\n";
			gotoxy (5,12);cout<<"1. To search by NAME";
			gotoxy (5,13);cout<<"2. To search by ROOM NO.";
			gotoxy (5,14);cout<<"0. Exit";
			gotoxy(30,21);cout<<"Enter choice : ";
			do{
			  ch=getch();
			  if(ch>=48 &&ch<=50) {cout<<ch;delay(500);}
			  }while(ch<48 || ch>50);
			switch(ch)
				{ case '0':choice =0;break;
				case '1' : choice =1;break;
				case '2':choice=2;break;
				}

			closegraph();
			restorecrtmode();
			switch(choice)
			{
			case 1:	{
			CUSTOMER c;
			c.searchCust();
			break;
					}
			case 2:	{
			CUSTOMER c;
			c.searchRoomNo();
			break;
			}
			}
			}while(choice!=0);
			break;
				}
		case 2:	{
			CUSTOMER c;
			c.check_in();
			break;
				}

		case 3:	{
			CUSTOMER c;
			c.check_out();
			break;
				}
		case 4:	{
			ROOMS r;
			r.status();
			break;
				}
		case 5:	{
			CUSTOMER c;
			c.reports();
			break;
				}
		case 6: {
		CUSTOMER c;
			c.previous_Customer();
			break;
				}


		}
		}while(choice!=0);
}
   
   
   
   return 0;
}


class ROOMS 
 { 
 		public: 
 		int roomNo; 
 		int roomType; 
 		int roomStatus; 
 		int roomCharges; 
 		void Database(); 
 		void status(); 
 		int findRoomNo(int TYPE); 
 		void bookRoom(int roomNo); 
 		unsigned long retRoomCharges(int roomNo); 
 		void releaseRoom(int roomNo); 
 
 
 }; 
 
 
 class CUSTOMER 
 { 
 		public: 
 		int Roomn; 
 		char name[30]; 
 		char add[30]; 
 		char phone[20]; 
 		int daysStayed; 
 		int DAY,MONTH,YEAR; 
 		long amount; 
 		void searchRoomNo(); 
 		void searchCust(); 
		void check_in(); 
 		void check_out(); 
 		void reports(); 
 		void previous_Customer(); 
 		}; 
